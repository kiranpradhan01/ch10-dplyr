# Install devtools package: allows installations from GitHub
install.packages("devtools")
# Install "fueleconomy" dataset from GitHub
devtools::install_github("hadley/fueleconomy")
# Use the `libary()` function to load the "fueleconomy" package
library(fueleconomy)
# Exercise 1: working with data frames (review)
install.packages("dplyr")  # once per machine
# Exercise 1: working with data frames (review)
install.packages("dplyr")  # once per machine
library("dplyr")
# Install devtools package: allows installations from GitHub
install.packages("devtools")
# Install "fueleconomy" dataset from GitHub
devtools::install_github("hadley/fueleconomy")
# Use the `libary()` function to load the "fueleconomy" package
library(fueleconomy)
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(vehicles)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
manufacturers <- select(vehicles, make)
View(manufacturers)
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
unique(manufacturers)
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
diff_manufacturers<- n(unique(manufacturers))
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
diff_manufacturers<- unique(manufacturers)
n(diff_manufacturers)
# Filter the data set for vehicles manufactured in 1997
vehicles[vehicles$year == "1997"]
# Filter the data set for vehicles manufactured in 1997
vehicles[,vehicles$year == "1997"]
# Filter the data set for vehicles manufactured in 1997
vehicles[vehicles$year == "1997",]
length(diff_manufacturers)
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
diff_manufacturers <- length(unique(manufacturers))
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
diff_manufacturers <- unique(manufacturers)
# Filter the data set for vehicles manufactured in 1997
makes1997 <- vehicles[vehicles$year == "1997",]
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
vehicles[order(vehicles$hwy)]
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
vehicles[order(vehicles$hwy),]
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
order_by_miles <- vehicles[order(vehicles$hwy),]
View(order_by_miles)
View(order_by_miles)
View(makes1997)
View(makes1997)
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
makes1997$average <- mean(hwy,city)
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
makes1997$average <- mean(makes1997$hwy,makes1997$city)
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
makes1997$average <- (makes1997$hwy + makes1997$city) / 2
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
makes1997$average <- (makes1997$hwy + makes1997$cty) / 2
View(manufacturers)
# Install and load the "fueleconomy" package
#install.packages("devtools")
#devtools::install_github("hadley/fueleconomy")
library(fueleconomy)
# Install and load the "dplyr" library
library("dyplyr")
# Install and load the "dplyr" library
library("dplyr")
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
makes <- select(vehicles, makes)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
makes <- select(vehicles, makes)
View(vehicles)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
makes <- select(vehicles, make)
# Use the `distinct()` function to determine how many different car manufacturers
# are represented by the data set
diff_makes <- distinct(makes)
# Filter the data set for vehicles manufactured in 1997
manufac1997 <- vehicles[vehicles$year == "1997",]
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
makes1997$average <- (manufac1997$hwy + manufac1997$cty) / 2
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
manufac1997$average <- (manufac1997$hwy + manufac1997$cty) / 2
# Filter the data set for vehicles manufactured in 1997
makes1997 <- filter(vehicles, year == 1997)
# Arrange the 1997 cars by highway (`hwy`) gas milage
order_by_miles <- arrange(vehicles, hwy)
View(order_by_miles)
View(order_by_miles)
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
avg1997mpg <- mutate(vehicles, ratio = (hwy + cty) / 2)
View(avg1997mpg)
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
avg1997mpg <- mutate(vehicles, average_mpg = (hwy + cty) / 2)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
two_wheel_20_mpg <- filter(vehicles, drive == "2-Wheel Drive" && cty > 20)
View(two_wheel_20_mpg)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
two_wheel_20_mpg <- filter(vehicles, drive == 2-Wheel Drive && cty > 20)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
two_wheel_20_mpg <- filter(vehicles, drive == '2-Wheel Drive' && cty > 20)
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
worst_hwy_mpg <- select(filter(vehicles, hwy = min(hwy), id)
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
worst_hwy_mpg <- select(filter(vehicles, hwy = min(hwy), id)
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
worst_hwy_mpg <- select(filter(vehicles, hwy = min(hwy), id))
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
worst_hwy_mpg <- select(filter(vehicles, hwy == min(hwy), id))
View(worst_hwy_mpg)
View(worst_hwy_mpg)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
two_wheel_20_mpg <- filter(vehicles, drive == '2-Wheel Drive', cty > 20)
View(two_wheel_20_mpg)
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
worst_hwy_mpg <- select(filter(vehicles, hwy == min(hwy), id))
View(worst_hwy_mpg)
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
worst_hwy_mpg <- select(id(filter(vehicles, hwy == min(hwy))))
